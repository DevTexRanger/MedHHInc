# Retrieve 5-year ACS median household income data (general, White, Hispanic) for selected Alabama counties across multiple years

# Load pacman; if not already installed, I highly encourage you to do so-especially if you're working with a lot of packages!
library("pacman")

# Load libraries using p_load
p_load(dplyr, ggplot2, plotly, scales, tidyr, tidyverse, tidycensus)

# Load the API Key in Your Scripts; If you saved the key in .Renviron, you can load it in your R scripts like this
readRenviron("~/.Renviron")  # Ensures the key is loaded
census_api_key(Sys.getenv("CENSUS_API_KEY"), install = FALSE)

yrs <- 2011:2023
table_name <- "B19013_001" # This table returns results for general median household income. for race-specific tables, they might have suffixes like "B19013A_001"

table_check <- sapply(yrs, function(year) {
  vars <- load_variables(year, "acs5", cache = TRUE)
  table_name %in% vars$name  # Adjust if needed
})

table_check_df <- data.frame(
  year = yrs,
  table_exists = table_check
)

# Check if the table is present in all years
if (all(table_check)) {
  print(paste("The table", table_name, "is present in all years from 2011 to 2023."))
} else {
  print(paste("The table", table_name, "is not present in all years from 2011 to 2023."))
}

# Load variables for the latest "acs5"
v23 <- load_variables(2023, "acs5", cache = TRUE)

# Obtain table name for median household income using the View(v23) command by using the 
View(v23)

# Create a variable name (medianhh) using the assignment operator in R, using a named vector with one element (tablename)
# Define variables for general, White Alone, and Hispanic median household incomess
medHHIncAL <- c(
  general = "B19013_001",    # General median household income
  white   = "B19013A_001",    # Median household income for White Alone
  hispanic= "B19013I_001"     # Median household income for Hispanics
)

# Specify the counties as the vector 'my counties'
my_counties <- c("Jefferson",# Home to Birmingham, the largest city in Alabama, it is a key economic and cultural hub for the state.
                 "Shelby", # Part of the Birmingham-Hoover metro area, Shelby County is expanding due to its suburban appeal; currently the fastest growing county in AL.
                 "Montgomery", # The state capital, Montgomery, is located here, making it an important center for political and historical significance.
                 "Mobile", # With Mobile as its seat, this county plays a significant role in Alabama's economy due to its port, which is a gateway for trade and commerce.
                 "Cullman", # Cullman County is experiencing notable growth, particularly in its economy and job market.
                 "Madison", # Home to Huntsville, a hub for technology and space exploration, Madison County continues to grow steadily. 
                 "Tuscaloosa", # Home to the University of Alabama, Tuscaloosa is a center for education, sports, and culture.
                 "Baldwin", # Located along the Gulf Coast, Baldwin County is thriving, with towns like Foley, Daphne, and Gulf Shores experiencing rapid development.
                 "Lee", # With Auburn University at its heart, Lee County attracts students, professionals, and families alike.
                 "Franklin" # the most Hispanic/Latino city in Alabama, with 39.3% Hispanic/Latino population.
)

# Specify the years as a list using the 'lst' from tidyverse
years <- lst(2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023)

# Request data for 2023 on the median household income for all TX counties
alabama_income <- map_dfr(
  years,
  ~ get_acs(
    geography = "county",
    variables = medHHIncAL,
    state = "AL",
    county = my_counties,
    year = .x,
    survey = "acs5",
    geometry = FALSE,
    output = "wide"
  ),
  .id = "year"
)

# Reshape the data from wide to long format
alabama_income_long <- alabama_income %>%
  pivot_longer(
    cols = c(generalE, whiteE, hispanicE, generalM, whiteM, hispanicM),
    names_to = c("income_type", ".value"),
    names_pattern = "(general|white|hispanic)(E|M)"
  ) %>%
  rename(county = NAME)

# ggplot code to compare the income estimates by income type
ggplot(alabama_income_long, aes(x = E, y = reorder(county, E), color = income_type)) +
  geom_errorbarh(aes(xmin = E - M, xmax = E + M), height = 0.3) +
  geom_point(size = 3) +
  theme_minimal(base_size = 12.5) +
  labs(
    title = "Comparison of Median Household Income Estimates in Alabama",
    subtitle = "General vs. White Alone vs. Hispanics (2011-2023 ACS 5-Year Estimates)",
    x = "Median Income Estimate (USD)",
    y = "County",
    color = "Income Type"
  ) +
  scale_x_continuous(labels = scales::label_dollar()) +
  theme(legend.position = "bottom")

# Make it interactive using `plotly`
p <- ggplot(alabama_income_long, 
            aes(x = E, y = reorder(county, E), color = income_type)) +
  geom_errorbarh(aes(xmin = E - M, xmax = E + M), height = 0.3) +
  geom_point(size = 3) +
  theme_minimal(base_size = 12.5) +
  labs(
    title = "Comparison of Median Household Income Estimates in Alabama",
    subtitle = "General vs. White Alone vs. Hispanics (2011-2023 ACS 5-Year Estimates)",
    x = "Median Income Estimate (USD)",
    y = "County",
    color = "Income Type"
  ) +
  scale_x_continuous(labels = scales::label_dollar()) +
  theme(legend.position = "bottom")

# Convert the ggplot to an interactive plot
ggplotly(p)
